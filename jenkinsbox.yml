---
# This playbook should be executed using 
# ansible-playbook jenkinsbox.yml
# command
# Developed for ansible version >= 1.7
- hosts: CHANGE_ME
  gather_facts: yes
  remote_user: root

  vars:
    project_name: CHANGE_ME

    cibox_apt_packages: []
    apache2_modules:
      - rewrite

    # Drush for Drupal 7.
    drush_composer_version: 6.*
    # Drush for Drupal 8.
    # drush_composer_version: 8.*

    drushrc:
      drush_usage_log: 1
      drush_usage_send: 1

    # @tag security.
    protected_folders:
      - /var/www/backup
      - /var/www/cache
    protected_folders_user: propeople
    protected_folders_pass: givemebackup

    # @tag security.
    # @todo decide where we should place/define features configs.
    cibox_ssl_enable_host: true
    php_apc_enabled_in_ini: true

  # @todo cleanup old tags.
  roles:
    - { role: cibox-swap, tags: ["cibox-swap"], when: ansible_virtualization_type != "openvz" }
    - { role: cibox-misc, tags: ["misc"] }
    - { role: ansible-role-php, tags: ["php-stack"] }
    - { role: ansible-composer, tags: ["ansible-composer", "php-stack"] }
    - { role: cibox-drush, tags: ["php-stack"] }
    - { role: ansible-php-pear, tags: ["ansible-php-pear", "php-stack"] }
    - { role: ansible-role-php-xhprof, tags: ["ansible-php-xhprof", "php-stack"] }
    - { role: ansible-role-mysql, tags: ["mysql", "php-stack", "ansible-role-mysql"] }
    - { role: cibox-jenkins, tags: ["cibox-jenkins"] }
    - { role: cibox-jetty-solr, tags: ["cibox-jetty-solr"] }
    - { role: cibox-sniffers, tags: ["cibox-sniffers", "php-stack"] }
    - { role: cibox-mysql-config, tags: ["mysql", "php-stack", "cibox-mysql-config"] }
    - { role: cibox-ssl-config, tags: ["apache", "php-stack", "ssl", "cibox-ssl-config"] }
    - { role: cibox-behat-selenium2, tags: ["cibox-behat-selenium", "behat-selenium"] }

  pre_tasks:
  # @tag environment.
  - name: Update apt cache
    sudo: yes
    apt: update_cache=yes
    ignore_errors: yes
    tags:
      - php-stack
      - mysql
      - apache

  # @tag environment.
  - name: Set Jenkins server IP
    set_fact:
      jenkins_server_ip: "{{ ansible_default_ipv4.address }}"

  # @tag environment.
  # @todo should be tested with DO 14.04 Ubuntu.
  - name: Setup initial packages onto clean system for ansible
    sudo: yes
    # Installing sudo on small ubuntu install.
    raw: "apt-get -y install python-simplejson sudo curl"

  # @tag environment.
  - name: Fixing logger not found
    sudo: yes
    shell: "apt-get --reinstall install -y bsdutils"

  # @tag security.
  - name: Adding jenkins user to group shadow
    user: name=jenkins groups=shadow append=yes
    tags:
      - cibox-jenkins

  # @tag security.
  - name: Adding jenkins user to group adm
    user: name=jenkins groups=adm append=yes
    tags:
      - cibox-jenkins

  # @tag security.
  - name: Adding jenkins user to nopasswd sudoers
    lineinfile: dest=/etc/sudoers line="jenkins ALL=(ALL) NOPASSWD:ALL"
    tags:
      - cibox-jenkins

  # @tag environment.
  - name: Install apt packages
    apt: name={{ item }} state=present
    with_items: cibox_apt_packages
    tags:
      - php-stack
      - mysql
      - apache

    # We have to disable mail sending from CI box.
    # Does not create a link if sendmail is installed.
    # @tag environment.
  - name: Check for sendmail.
    file: path=/usr/sbin/sendmail src=/bin/true state=link force=no
    tags:
      - php-stack
      - mysql
      - apache

  # @tag environment.
  - name: Create ansible config directory
    sudo: yes
    file: path=/etc/ansible state=directory mode=775
    tags:
      - php-stack
      - mysql
      - apache

  tasks:
  # @tag environment.
  - name: apt-get update
    apt: update_cache=yes
    ignore_errors: yes
    tags:
      - php-stack
      - mysql
      - apache

  # @tag apache role.
  - name: Apache2 modules
    apache2_module: state=present name={{ item }}
    with_items: apache2_modules
    tags:
      - apache
      - php-stack
    notify: Restart apache

  # @tag apache role.
  - name: Copy apache vhost file
    synchronize: src=files/sites-enabled/000-default.conf dest=/etc/apache2/sites-enabled/000-default.conf
    sudo: yes
    tags:
      - apache
      - php-stack
    notify: Restart apache

  # @tag security.
  - name: Starting random rnd-tools service
    sudo: yes
    shell: rngd -r /dev/urandom
    when: ansible_virtualization_type != "openvz"

  # @tag security.
  - name: Create protected folders
    file: path={{ item }} owner=www-data group=jenkins state=directory
    with_items: protected_folders

  # @tag security.
  - name: Copy .htaccess to the protected folders
    synchronize: src=files/backup-folder/.htaccess dest={{ item }}/.htaccess
    with_items: protected_folders

  # @tag security.
  - name: Generate .htpasswd in protected folders
    htpasswd: path={{ item }}/.htpasswd name={{ protected_folders_user }} password={{ protected_folders_pass }}
    with_items: protected_folders

  # @todo should be removed.
  handlers:
  - name: Restart apache
    service: name=apache2 state=restarted
    tags:
      - mysql
      - apache
      - php-stack
